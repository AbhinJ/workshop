# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010-2018 Daniel Kastl, Vicky Vergara
# This file is distributed under the same license as the Workshop FOSS4G Dar Es Salaam package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Workshop FOSS4G Dar Es Salaam 2.5\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-10-04 16:24-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../docs/source/chapters/ol3_client.rst:13
msgid "OpenLayers 3 Based Routing Interface"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:15
msgid "The goal of this chapter is to create a simple web-based user interface to pgRouting based on OpenLayers 3. The user will be able to choose start and destination locations, and get the route from the start point to the destination point."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:20
msgid "The start and destination points are created by the user, with simple clicks on the map. The start and destination coordinates are then sent to the WMS server (GeoServer), as parameters to a WMS ``GetMap`` request. The resulting image is added as an *image* layer to the map."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:26
msgid "OpenLayers 3 introduction"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:28
msgid "OpenLayers 3 is a complete rewrite of OpenLayers 2. It uses modern JavaScript, and HTML5 technologies such as Canvas and WebGL for the rendering of images/tiles and vectors."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:32
msgid "Creating an OpenLayers 3 map in a web page involves creating a *map* object, which is an instance of the ``ol.Map`` class. Then, data layers and controls can be added to that map object."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:36
msgid "The center and resolution (zoom level) of the map are controlled through the *view* object. Unless other mapping libraries, the view is separated from the map; one advantage is to allow multiple maps to share the same view. See `this example <http://openlayers.org/en/master/examples/preload.html>`_."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:41
msgid "OpenLayers 3 features three renderers: the *Canvas* renderer, the *WebGL* renderer, and the *DOM* renderer. Currently, the most capable renderer is Canvas. In particular the Canvas renderer supports vector layers, while the other two don't. Canvas is the default renderer, and the renderer used in this workshop."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:48
msgid "Creating a minimal map"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:50
msgid "Let's create our first OpenLayers 3 map: open a text editor and copy this code into a file named ``ol3.html``. You can save this file on the ``Desktop`` and open it with a web browser."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:58
msgid "This workshop assumes, that you use OSGeo Live, which includes the OpenLayers Javascript library accessible under the following URL: http://localhost/ol3/dist/ If you don't use OSGeo Live for this workshop, you need to adjust the URL to OpenLayers Javascript and CSS file."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:63
msgid "This web page includes a simple map with an OpenStreetMap layer and center to a predifined location. There is no routing-related code for now; just a simple map with stantard navigation tools."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:67
msgid "Line by line we have:"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:69
msgid "Line 6: include the default OpenLayers CSS file."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:70
msgid "Line 7 to Line 12: CSS rules to give dimensions to the map DOM element."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:71
msgid "Line 15: add a div element for the map. The element's identifier is ``map``."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:72
msgid "Line 16: load the OpenLayers 3 library code. Functions and classes in the ``ol`` namespace come from there."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:74
msgid "Line 18 to Line 29: the JavaScript code specific to that example."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:76
msgid "Let's have a closer look at the code that create the OpenLayers 3 code:"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:98
msgid "This code creates an ``ol.Map`` instance whose ``target`` is the ``map`` DOM element in the HTML page. The map is configured with a *tile layer*, itself configured with an OpenStreetMap *source*. The map is also configured with a *view* instance (of the ``ol.View`` class) with predefined values for the *center* and the *zoom* level."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:105
msgid "WMS GET parameters"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:107
msgid "Add this code after the creation of the map:"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:116
msgid "The ``params`` object holds the WMS GET parameters that will be sent to GeoServer. Here we set the values that will never change: the layer name and the output format."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:122
msgid "Select \"start\" and \"destination\""
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:124
msgid "We now want to allow the user to add the start and destination positions by clicking on the map. Add the following code for that:"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:141
msgid "That code creates two vector features, one for the \"start\" position and one for the \"destination\" position. These features are empty for now – they do not include a geometry."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:145
msgid "The code also creates a vector layer, with the \"start\" and \"destination\" features added to it. It also adds the vector layer to the map, using the map's ``addLayer`` method."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:149
msgid "Now add the following code:"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:184
msgid "This code registers a listener function for the map ``click`` event. This means that OpenLayers 3 will call that function each time a click is detected on the map."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:188
msgid "The event object passed to the listener function includes a ``coordinate`` property that indicates the geographical location of the click. That coordinate is used to create a *point* geometry for the \"start\" and \"destination\" features."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:192
msgid "Once we have the start and destination points (after two clicks); the two pairs of coordinates are transformed from the map projection (``EPSG:3857``) into the server projection (``EPSG:4326``) using the ``transform`` function."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:196
msgid "The ``viewparams`` property is then set on WMS GET parameters object. The value of this property has a special meaning: GeoServer will substitute the value before executing the SQL query for the layer. For example, if we have:"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:204
msgid "And ``viewparams`` is ``viewparams=min:20;max:120`` then the SQL query sent to PostGIS will be:"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:211
msgid "Finally, a new OpenLayers WMS layer is created and added to the map, the param object is passed to it."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:215
msgid "Clear the results"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:217
msgid "Add this after the map ``div`` in the HTML page:"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:223
msgid "This creates a button to we will use to allow the user to clear the routing points and start a new routing query."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:226
msgid "Now add the following to the JavaScript code:"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:239
msgid "When the button is clicked, this function passed to ``addEventListener`` is executed. That function resets the \"start\" and \"destination\" features and remove the routing result layer from the map."
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:244
msgid "Summary (full example)"
msgstr ""

#: ../../docs/source/chapters/ol3_client.rst:246
msgid "Now copy the following final application code into a file, accessible by a webserver, such as Apache or Nginx for example:"
msgstr ""

